.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "MUSTACHE" "1" "August 2011" "DEFUNKT" "Porthole Manual"
.
.SH "NAME"
\fBporthole\fR \- Porthole processor
.
.SH "SYNOPSIS"
.
.nf

porthole <YAML> <FILE>
porthole \-\-compile <FILE>
porthole \-\-tokens <FILE>
.
.fi
.
.SH "DESCRIPTION"
Porthole is a logic\-less templating system for HTML, config files, anything\.
.
.P
The \fBporthole\fR command processes a Porthole template preceded by YAML frontmatter from standard input and prints one or more documents to standard output\.
.
.P
YAML frontmatter beings with \fB\-\-\-\fR on a single line, followed by YAML, ending with another \fB\-\-\-\fR on a single line, e\.g\.
.
.IP "" 4
.
.nf

\-\-\-
names: [ {name: chris}, {name: mark}, {name: scott} ]
\-\-\-
.
.fi
.
.IP "" 0
.
.P
If you are unfamiliar with YAML, it is a superset of JSON\. Valid JSON should work fine\.
.
.P
After the frontmatter should come any valid Porthole template\. See porthole(5) for an overview of Porthole templates\.
.
.P
For example:
.
.IP "" 4
.
.nf

{{#names}}
  Hi {{name}}!
{{/names}}
.
.fi
.
.IP "" 0
.
.P
Now let\'s combine them\.
.
.IP "" 4
.
.nf

$ cat data\.yml
\-\-\-
names: [ {name: chris}, {name: mark}, {name: scott} ]
\-\-\-

$ cat template\.porthole
{{#names}}
  Hi {{name}}!
{{/names}}

$ cat data\.yml template\.porthole | porthole
Hi chris!
Hi mark!
Hi scott!
.
.fi
.
.IP "" 0
.
.P
If you provide multiple YAML documents (as delimited by \fB\-\-\-\fR), your template will be rendered multiple times\. Like a mail merge\.
.
.P
For example:
.
.IP "" 4
.
.nf

$ cat data\.yml
\-\-\-
name: chris
\-\-\-
name: mark
\-\-\-
name: scott
\-\-\-

$ cat template\.porthole
Hi {{name}}!

$ cat data\.yml template\.porthole | porthole
Hi chris!
Hi mark!
Hi scott!
.
.fi
.
.IP "" 0
.
.SH "OPTIONS"
By default \fBporthole\fR will try to render a Porthole template using the YAML frontmatter you provide\. It can do a few other things, however\.
.
.TP
\fB\-c\fR, \fB\-\-compile\fR
Print the compiled Ruby version of a given template\. This is the code that is actually used when rendering a template into a string\. Useful for debugging but only if you are familiar with Porthole\'s internals\.
.
.TP
\fB\-t\fR, \fB\-\-tokens\fR
Print the tokenized form of a given Porthole template\. This can be used to understand how Porthole parses a template\. The tokens are handed to a generator which compiles them into a Ruby string\. Syntax errors and confused tags, therefor, can probably be identified by examining the tokens produced\.
.
.SH "INSTALLATION"
If you have RubyGems installed:
.
.IP "" 4
.
.nf

gem install porthole
.
.fi
.
.IP "" 0
.
.SH "EXAMPLES"
.
.nf

$ porthole data\.yml template\.porthole
$ cat data\.yml | porthole \- template\.porthole
$ porthole \-c template\.porthole
$ cat <<data | ruby porthole \- template\.porthole
\-\-\-
name: Bob
age: 30
\-\-\-
data
.
.fi
.
.SH "COPYRIGHT"
Porthole is Copyright (C) 2009 Chris Wanstrath
.
.P
Original CTemplate by Google
.
.SH "SEE ALSO"
porthole(5), gem(1), \fIhttp://porthole\.github\.com/\fR
